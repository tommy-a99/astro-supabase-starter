-- Custom types
create type public.user_status as enum ('ONLINE', 'OFFLINE');

-- USERS
create table public.users (
  id          uuid not null primary key, -- UUID from auth.users
  username    text,
  status      user_status default 'OFFLINE'::public.user_status
);
comment on table public.users is 'Profile data for each user.';
comment on column public.users.id is 'References the internal Supabase Auth user.';

-- POSTINGS
create table public.postings (
  id            bigint generated by default as identity primary key,
  inserted_at   timestamp with time zone default timezone('utc'::text, now()) not null,
  content       text not null,
  user_id       uuid references public.users not null
);
comment on table public.postings is 'User-generated posts.';

-- Secure the tables
alter table public.users
  enable row level security;
alter table public.postings
  enable row level security;

create policy "Allow read access to everyone" on public.postings
  for select using (true);
create policy "Allow insert access for authenticated users" on public.postings
  for insert with check ((select auth.uid()) = user_id);
create policy "Allow update access for post owners" on public.postings
  for update using ((select auth.uid()) = user_id);

-- Send "previous data" on change
alter table public.users
  replica identity full;
alter table public.postings
  replica identity full;
